{"version":3,"sources":["webpack:///main.js","webpack:///webpack/bootstrap a493e08f896c6fa75ee6","webpack:///./gameTickLoop.js","webpack:///./creepRoles/builder.js","webpack:///./creepRoles/harvester.js","webpack:///./creepRoles/upgrader.js","webpack:///./creepManagement/clearMemoryOfDeadCreeps.js","webpack:///./creepManagement/maintainSmallHarvesterPopulation.js"],"names":["module","exports","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","loop","undefined","_harvester","_harvester2","_upgrader","_upgrader2","_builder","_builder2","_maintainSmallHarvesterPopulation","_maintainSmallHarvesterPopulation2","_clearMemoryOfDeadCreeps","_clearMemoryOfDeadCreeps2","gameTickLoop","console","log","Game","time","structs","structures","i","structsArray","key","push","Memory","controllerDowngradeIn","_my","controllerProps","keys","_i","length","tower","getObjectById","closestDamagedStructure","pos","findClosestByRange","FIND_STRUCTURES","filter","structure","hits","hitsMax","repair","closestHostile","FIND_HOSTILE_CREEPS","attack","creepNameKey","creeps","creep","memory","role","run","builderRole","building","carry","energy","carryCapacity","targets","room","find","FIND_CONSTRUCTION_SITES","build","ERR_NOT_IN_RANGE","moveTo","sources","FIND_SOURCES","harvest","roleHarvester","structureType","STRUCTURE_EXTENSION","STRUCTURE_SPAWN","STRUCTURE_TOWER","energyCapacity","transfer","RESOURCE_ENERGY","roleUpgrader","upgrading","upgradeController","controller","name","harvesters","_","existingHarvIds","newHarvId","j","newHarvester","spawns","spawn","createCreep","WORK","CARRY","MOVE"],"mappings":"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","file":"main.js","sourcesContent":["module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.loop = undefined;\n\t\n\tvar _harvester = __webpack_require__(2);\n\t\n\tvar _harvester2 = _interopRequireDefault(_harvester);\n\t\n\tvar _upgrader = __webpack_require__(3);\n\t\n\tvar _upgrader2 = _interopRequireDefault(_upgrader);\n\t\n\tvar _builder = __webpack_require__(1);\n\t\n\tvar _builder2 = _interopRequireDefault(_builder);\n\t\n\tvar _maintainSmallHarvesterPopulation = __webpack_require__(5);\n\t\n\tvar _maintainSmallHarvesterPopulation2 = _interopRequireDefault(_maintainSmallHarvesterPopulation);\n\t\n\tvar _clearMemoryOfDeadCreeps = __webpack_require__(4);\n\t\n\tvar _clearMemoryOfDeadCreeps2 = _interopRequireDefault(_clearMemoryOfDeadCreeps);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar gameTickLoop = function gameTickLoop() {\n\t  (0, _clearMemoryOfDeadCreeps2.default)();\n\t  console.log(\"Game.time:\", Game.time);\n\t  (0, _maintainSmallHarvesterPopulation2.default)();\n\t\n\t  var structs = Game.structures;\n\t  var i = 0;\n\t  var structsArray = [];\n\t  for (var key in structs) {\n\t    console.log(\"structure #\" + i++, structs[key]);\n\t    console.log(\"struct key\", key);\n\t    structsArray.push(structs[key]);\n\t  }\n\t\n\t  Memory.controllerDowngradeIn = 10000;\n\t\n\t  console.log(\"_MY MY MY \", structsArray[0]._my);\n\t\n\t  var controllerProps = Object.keys(structsArray[0]);\n\t  console.log(\"ctrlr props: \" + controllerProps);\n\t  for (var _i = 0; _i < controllerProps.length; _i++) {\n\t    console.log(\"controller key #\" + _i + controllerProps[_i]);\n\t  }\n\t  console.log(\"structures collection:\", structs);\n\t\n\t  var tower = Game.getObjectById(null);\n\t  if (tower) {\n\t    var closestDamagedStructure = tower.pos.findClosestByRange(FIND_STRUCTURES, {\n\t      filter: function filter(structure) {\n\t        return structure.hits < structure.hitsMax;\n\t      }\n\t    });\n\t    if (closestDamagedStructure) {\n\t      tower.repair(closestDamagedStructure);\n\t    }\n\t\n\t    var closestHostile = tower.pos.findClosestByRange(FIND_HOSTILE_CREEPS);\n\t    if (closestHostile) {\n\t      tower.attack(closestHostile);\n\t    }\n\t  }\n\t\n\t  for (var creepNameKey in Game.creeps) {\n\t    var creep = Game.creeps[creepNameKey];\n\t    if (creep.memory.role == 'harvester') {\n\t      _harvester2.default.run(creep);\n\t    }\n\t    if (creep.memory.role == 'upgrader') {\n\t      _upgrader2.default.run(creep);\n\t    }\n\t    if (creep.memory.role == 'builder') {\n\t      _builder2.default.run(creep);\n\t    }\n\t  }\n\t};\n\t\n\texports.loop = gameTickLoop;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar builderRole = {\n\t  /** @param {Creep} creep **/\n\t  run: function run(creep) {\n\t    if (creep.memory.building && creep.carry.energy == 0) {\n\t      creep.memory.building = false;\n\t    }\n\t    if (!creep.memory.building && creep.carry.energy == creep.carryCapacity) {\n\t      creep.memory.building = true;\n\t    }\n\t    if (creep.memory.building) {\n\t      var targets = creep.room.find(FIND_CONSTRUCTION_SITES);\n\t      if (targets.length) {\n\t        if (creep.build(targets[0]) == ERR_NOT_IN_RANGE) {\n\t          creep.moveTo(targets[0]);\n\t        }\n\t      }\n\t    } else {\n\t      var sources = creep.room.find(FIND_SOURCES);\n\t      if (creep.harvest(sources[0]) == ERR_NOT_IN_RANGE) {\n\t        creep.moveTo(sources[0]);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\texports.default = builderRole;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar roleHarvester = {\n\t  /** @param {Creep} creep **/\n\t  run: function run(creep) {\n\t    if (creep.carry.energy < creep.carryCapacity) {\n\t      var sources = creep.room.find(FIND_SOURCES);\n\t      if (creep.harvest(sources[0]) == ERR_NOT_IN_RANGE) {\n\t        creep.moveTo(sources[0]);\n\t      }\n\t    } else {\n\t      var targets = creep.room.find(FIND_STRUCTURES, {\n\t        filter: function filter(structure) {\n\t          return (structure.structureType == STRUCTURE_EXTENSION || structure.structureType == STRUCTURE_SPAWN || structure.structureType == STRUCTURE_TOWER) && structure.energy < structure.energyCapacity;\n\t        }\n\t      });\n\t      if (targets.length > 0) {\n\t        if (creep.transfer(targets[0], RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\n\t          creep.moveTo(targets[0]);\n\t        }\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\texports.default = roleHarvester;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar roleUpgrader = {\n\t  /** @param {Creep} creep **/\n\t  run: function run(creep) {\n\t    if (creep.memory.upgrading && creep.carry.energy == 0) {\n\t      creep.memory.upgrading = false;\n\t    }\n\t    if (!creep.memory.upgrading && creep.carry.energy == creep.carryCapacity) {\n\t      creep.memory.upgrading = true;\n\t    }\n\t\n\t    if (creep.memory.upgrading) {\n\t      if (creep.upgradeController(creep.room.controller) == ERR_NOT_IN_RANGE) {\n\t        creep.moveTo(creep.room.controller);\n\t      }\n\t    } else {\n\t      var sources = creep.room.find(FIND_SOURCES);\n\t      if (creep.harvest(sources[0]) == ERR_NOT_IN_RANGE) {\n\t        creep.moveTo(sources[0]);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\texports.default = roleUpgrader;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\texports.default = function () {\n\t  for (var name in Memory.creeps) {\n\t    console.log(\"creep in memory:\", name);\n\t    if (!Game.creeps[name]) {\n\t      delete Memory.creeps[name];\n\t      console.log('Clearing non-existing creep memory:', name);\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\texports.default = function () {\n\t  var harvesters = _.filter(Game.creeps, function (creep) {\n\t    return creep.memory.role == 'harvester';\n\t  });\n\t  console.log('Harvesters: ' + harvesters.length);\n\t\n\t  if (harvesters.length < 2) {\n\t    var existingHarvIds = [];\n\t    for (var i = 0; i < harvesters.length; i++) {\n\t      existingHarvIds.push(harvesters[0].memory.id);\n\t    }\n\t    var newHarvId = null;\n\t    for (var _i = 0; _i < harvesters.length; _i++) {\n\t      for (var j = 0; j < existingHarvIds.length; j++) {\n\t        if (_i !== existingHarvIds[j]) {\n\t          newHarvId = _i;\n\t        }\n\t      }\n\t    }\n\t    var newHarvester = Game.spawns.spawn.createCreep([WORK, CARRY, MOVE], \"harvester\" + newHarvId, { role: \"harvester\", id: newHarvId });\n\t    console.log(\"Spawning new harvester: \" + newHarvester);\n\t  }\n\t};\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** main.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap a493e08f896c6fa75ee6\n **/","import roleHarvester from \"./creepRoles/harvester.js\";\nimport roleUpgrader from \"./creepRoles/upgrader.js\";\nimport roleBuilder from \"./creepRoles/builder.js\";\n\nimport maintainSmallHarvesterPopulation from \"./creepManagement/maintainSmallHarvesterPopulation.js\";\nimport clearMemoryOfDeadCreeps from \"./creepManagement/clearMemoryOfDeadCreeps.js\";\n\n\nconst gameTickLoop = () => {\n  clearMemoryOfDeadCreeps();\n  console.log(\"Game.time:\", Game.time);\n  maintainSmallHarvesterPopulation();\n\n  const structs = Game.structures;\n  let i = 0;\n  let structsArray = [];\n  for (let key in structs){\n    console.log(\"structure #\"+i++, structs[key]);\n    console.log(\"struct key\", key);\n    structsArray.push(structs[key]);\n  }\n\n  Memory.controllerDowngradeIn = 10000;\n\n  console.log(\"_MY MY MY \", structsArray[0]._my)\n\n  const controllerProps = Object.keys(structsArray[0]);\n  console.log(\"ctrlr props: \"+ controllerProps)\n  for (let i = 0; i < controllerProps.length; i++){\n    console.log(\"controller key #\"+i+controllerProps[i])\n  }\n  console.log(\"structures collection:\", structs)\n\n\n  var tower = Game.getObjectById(null);\n  if(tower) {\n    var closestDamagedStructure = tower.pos.findClosestByRange(FIND_STRUCTURES, {\n      filter: (structure) => structure.hits < structure.hitsMax\n    });\n    if(closestDamagedStructure) {\n      tower.repair(closestDamagedStructure);\n    }\n\n    var closestHostile = tower.pos.findClosestByRange(FIND_HOSTILE_CREEPS);\n    if(closestHostile) {\n      tower.attack(closestHostile);\n    }\n  }\n\n  for (let creepNameKey in Game.creeps) {\n    let creep = Game.creeps[creepNameKey];\n    if(creep.memory.role == 'harvester') {\n      roleHarvester.run(creep);\n    }\n    if(creep.memory.role == 'upgrader') {\n      roleUpgrader.run(creep);\n    }\n    if(creep.memory.role == 'builder') {\n      roleBuilder.run(creep);\n    }\n  }\n}\n\nexport {gameTickLoop as loop};\n\n\n/** WEBPACK FOOTER **\n ** ./gameTickLoop.js\n **/","const builderRole = {\n  /** @param {Creep} creep **/\n  run: function(creep) {\n    if(creep.memory.building && creep.carry.energy == 0) {\n      creep.memory.building = false;\n    }\n    if(!creep.memory.building && creep.carry.energy == creep.carryCapacity) {\n      creep.memory.building = true;\n    }\n    if(creep.memory.building) {\n      var targets = creep.room.find(FIND_CONSTRUCTION_SITES);\n      if(targets.length) {\n        if(creep.build(targets[0]) == ERR_NOT_IN_RANGE) {\n          creep.moveTo(targets[0]);\n        }\n      }\n    }\n    else {\n      var sources = creep.room.find(FIND_SOURCES);\n      if(creep.harvest(sources[0]) == ERR_NOT_IN_RANGE) {\n        creep.moveTo(sources[0]);\n      }\n    }\n  }\n};\n\nexport default builderRole;\n\n\n/** WEBPACK FOOTER **\n ** ./creepRoles/builder.js\n **/","var roleHarvester = {\n  /** @param {Creep} creep **/\n  run: function(creep) {\n    if(creep.carry.energy < creep.carryCapacity) {\n      var sources = creep.room.find(FIND_SOURCES);\n      if(creep.harvest(sources[0]) == ERR_NOT_IN_RANGE) {\n        creep.moveTo(sources[0]);\n      }\n    }\n    else {\n      var targets = creep.room.find(FIND_STRUCTURES, {\n        filter: (structure) => {\n          return (structure.structureType == STRUCTURE_EXTENSION ||\n            structure.structureType == STRUCTURE_SPAWN ||\n            structure.structureType == STRUCTURE_TOWER) && structure.energy < structure.energyCapacity;\n        }\n      });\n      if(targets.length > 0) {\n        if(creep.transfer(targets[0], RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\n          creep.moveTo(targets[0]);\n        }\n      }\n    }\n  }\n};\n\nexport default roleHarvester;\n\n\n/** WEBPACK FOOTER **\n ** ./creepRoles/harvester.js\n **/","var roleUpgrader = {\n  /** @param {Creep} creep **/\n  run: function(creep) {\n    if(creep.memory.upgrading && creep.carry.energy == 0) {\n      creep.memory.upgrading = false;\n    }\n    if(!creep.memory.upgrading && creep.carry.energy == creep.carryCapacity) {\n      creep.memory.upgrading = true;\n    }\n\n    if(creep.memory.upgrading) {\n      if(creep.upgradeController(creep.room.controller) == ERR_NOT_IN_RANGE) {\n        creep.moveTo(creep.room.controller);\n      }\n    }\n    else {\n      var sources = creep.room.find(FIND_SOURCES);\n      if(creep.harvest(sources[0]) == ERR_NOT_IN_RANGE) {\n        creep.moveTo(sources[0]);\n      }\n    }\n  }\n};\n\nexport default roleUpgrader;\n\n\n/** WEBPACK FOOTER **\n ** ./creepRoles/upgrader.js\n **/","export default () => {\n  for(var name in Memory.creeps) {\n    console.log(\"creep in memory:\", name)\n    if(!Game.creeps[name]) {\n      delete Memory.creeps[name];\n      console.log('Clearing non-existing creep memory:', name);\n    }\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./creepManagement/clearMemoryOfDeadCreeps.js\n **/","export default () => {\n  var harvesters = _.filter(Game.creeps, creep => creep.memory.role == 'harvester');\n  console.log('Harvesters: ' + harvesters.length);\n\n  if(harvesters.length < 2) {\n    const existingHarvIds = []\n    for (let i = 0; i < harvesters.length; i++){\n      existingHarvIds.push(harvesters[0].memory.id)\n    }\n    let newHarvId = null;\n    for (let i = 0; i < harvesters.length; i++){\n      for (let j = 0; j < existingHarvIds.length; j++){\n        if (i !== existingHarvIds[j]) {\n          newHarvId = i;\n        }\n      }\n    }\n    var newHarvester = Game.spawns.spawn.createCreep([WORK,CARRY,MOVE], (\"harvester\" + newHarvId), {role: \"harvester\", id: newHarvId});\n    console.log(\"Spawning new harvester: \" + newHarvester);\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./creepManagement/maintainSmallHarvesterPopulation.js\n **/"],"sourceRoot":""}