module.exports=function(e){function r(t){if(o[t])return o[t].exports;var n=o[t]={exports:{},id:t,loaded:!1};return e[t].call(n.exports,n,n.exports,r),n.loaded=!0,n.exports}var o={};return r.m=e,r.c=o,r.p="",r(0)}([function(e,r,o){"use strict";function t(e){return e&&e.__esModule?e:{"default":e}}Object.defineProperty(r,"__esModule",{value:!0}),r.loop=void 0;var n=o(2),a=t(n),u=o(3),l=t(u),i=o(1),s=t(i),c=o(5),m=t(c),f=o(4),d=t(f),y=function(){(0,d["default"])(),console.log("Game.time:",Game.time),(0,m["default"])();var e=Game.structures,r=0;for(key in e)console.log("structure #"+r++,e[key]);console.log("structures collection:",e);var o=Game.getObjectById(null);if(o){var t=o.pos.findClosestByRange(FIND_STRUCTURES,{filter:function(e){return e.hits<e.hitsMax}});t&&o.repair(t);var n=o.pos.findClosestByRange(FIND_HOSTILE_CREEPS);n&&o.attack(n)}for(var u in Game.creeps){var i=Game.creeps[u];"harvester"==i.memory.role&&a["default"].run(i),"upgrader"==i.memory.role&&l["default"].run(i),"builder"==i.memory.role&&s["default"].run(i)}};r.loop=y},function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var o={run:function(e){if(e.memory.building&&0==e.carry.energy&&(e.memory.building=!1),e.memory.building||e.carry.energy!=e.carryCapacity||(e.memory.building=!0),e.memory.building){var r=e.room.find(FIND_CONSTRUCTION_SITES);r.length&&e.build(r[0])==ERR_NOT_IN_RANGE&&e.moveTo(r[0])}else{var o=e.room.find(FIND_SOURCES);e.harvest(o[0])==ERR_NOT_IN_RANGE&&e.moveTo(o[0])}}};r["default"]=o},function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var o={run:function(e){if(e.carry.energy<e.carryCapacity){var r=e.room.find(FIND_SOURCES);e.harvest(r[0])==ERR_NOT_IN_RANGE&&e.moveTo(r[0])}else{var o=e.room.find(FIND_STRUCTURES,{filter:function(e){return(e.structureType==STRUCTURE_EXTENSION||e.structureType==STRUCTURE_SPAWN||e.structureType==STRUCTURE_TOWER)&&e.energy<e.energyCapacity}});o.length>0&&e.transfer(o[0],RESOURCE_ENERGY)==ERR_NOT_IN_RANGE&&e.moveTo(o[0])}}};r["default"]=o},function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var o={run:function(e){if(e.memory.upgrading&&0==e.carry.energy&&(e.memory.upgrading=!1),e.memory.upgrading||e.carry.energy!=e.carryCapacity||(e.memory.upgrading=!0),e.memory.upgrading)e.upgradeController(e.room.controller)==ERR_NOT_IN_RANGE&&e.moveTo(e.room.controller);else{var r=e.room.find(FIND_SOURCES);e.harvest(r[0])==ERR_NOT_IN_RANGE&&e.moveTo(r[0])}}};r["default"]=o},function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r["default"]=function(){for(var e in Memory.creeps)console.log("creep in memory:",e),Game.creeps[e]||(delete Memory.creeps[e],console.log("Clearing non-existing creep memory:",e))}},function(e,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r["default"]=function(){var e=_.filter(Game.creeps,function(e){return"harvester"==e.memory.role});if(console.log("Harvesters: "+e.length),e.length<2){for(var r=[],o=0;o<e.length;o++)r.push(e[0].memory.id);for(var t=null,n=0;n<e.length;n++)for(var a=0;a<r.length;a++)n!==r[a]&&(t=n);var u=Game.spawns.spawn.createCreep([WORK,CARRY,MOVE],"harvester"+t,{role:"harvester",id:t});console.log("Spawning new harvester: "+u)}}}]);
//# sourceMappingURL=main.js.map